@startuml
skinparam packageStyle frame
top to bottom direction

package Util {
    class ID { }
    class PasswordManager { }
}

package DataBase {
  class UserDAO {
    /'
     ' + getUserRoleByID(userId: String): String		
     ' + getUserByID(userId: String): User
     ' + isUserPresentByID(userId: String): boolean
     ' + isUserPresentByEmail(email: String): boolean
     ' + getUserIdByEmail(email: String): int
     ' + getAllAuthors(): List<User>
     ' + saveUser(user: User): void
     '/
  }
  
  class ConferenceDAO {
    /'
     ' + getConferenceByID(id: ID): Conference
     ' + isConferencePresentByID(id: ID): boolean
     ' + getAllConferences(): ArrayList<Conference>
     ' + getActiveConferences(): ArrayList<Conference>
     ' + saveConference(conf: Conference): void
     ' + getArticlesByConference(conf_id: ID): ArrayList<Article>
     '/
  }
  
  class ArticleDAO {
    /'
     ' + saveArticle(art: Article): void
     ' + getArticlesByAuthor(id_aut: ID): ArrayList<Article>
     ' + getArticleByID(id: ID): Article
     ' + isArticlePresentByID(id: ID): boolean
     ' + updateTitle(artid: ID, newTitle: String): void
     ' + updateAbstract(artid: ID, newAbstract: String): void
     '/
  }
  
  class ReviewDAO {
    /'
     ' + hasConflictOfInterest(idArt: ID, idUser: ID): boolean
     ' + assignReviewer(idArt: ID, idUser: ID): void
     ' + getReviewersForArticle(idArt: ID): ArrayList<String>
     ' + updateArticleStatus(id: ID, status: String): void
     '/
  }

  class DBManager {
'    + getConnectio(): ODBConnection
  }

  UserDAO --> DBManager
  ConferenceDAO --> DBManager
  ArticleDAO --> DBManager
  ReviewDAO --> DBManager
}

package Entity {

  abstract class User {
    /'
     ' - id: int
     ' - name: String
     ' - lastName: String
     ' - email: String
     ' - Affiliazione: String
     ' # User(aff: String, email: String, lastName: String, name: String, password: String, id: ID);
     ' # User(aff: String, email: String, lastName: String, name: String, password: String);
     ' # User(u: User)
     ' + getId(): ID
     ' + getName(): String
     ' + getLastName(): String
     ' + getAffiliazione(): String
     ' + getEmail(): String
     ' + getPassword(): String
     ' + {abstract} getRole(): String 
     ' + setAffiliazione(aff: String): void
     ' + setEmail(email: String): void
     '/
  }

  class Author {
    /'
     ' - final role: String
     ' + Author(aff: String, email: String, lastName: String, name: String, password: String, id: String)
     ' + Author(a: Author)		
     ' + getRole(): String
     '/
  }

  class Organizer {
    /'
     ' - final role: String
     ' + Organizer(aff: String, email: String, lastName: String, name: String, password: String, id: String)
     ' + Organizer(o: Organizer)
     ' + getRole(): String
     '/
  }

  class Article {
    /'
     ' - title: String
     ' - abstr: String
     ' - authors: ArrayList<Author>
     ' + Articolo(id: ID, abstr: String, autori: ArrayList<Author>, titolo: String)
     ' + Articolo(a: Articolo)
     ' + getAuthors(): ArrayList<Author>
     ' + getAbstract: String
     ' + getTitle: String
     ' + getId: ID
     '/
  }
  
  class Conference {
    /'
     ' - title: String
     ' - description: String
     ' - deadline: Date
     ' - articles: ArrayList<Article>
     ' + Conference(deadline: Date, title: String, description: String, id: ID, organizer: ID);
     ' + Conference(conf: Conference)
     ' + getTitle(): String
     ' + getDescription(): String
     ' + getDeadline(): Date
     ' + getArticles(): ArrayList<Article>
     ' + getId: ID
     ' + getOrganizer: String
     ' + nearDeadline: boolean
     '/
   }

   class Review {

   }	

  User <|-- Author
  User <|-- Organizer
  Conference o-- Article
}

package Controller {

  class UserController {
    /'
     ' - user_dao: UserDAO
     ' + UserController();
     ' + registerUser(String affiliazione, String email, String lastname, String name, String password, String ruole): RUserDTO
     ' + login(email: String, password: String): RUserDTO
     ' + getRAuthorBYEmail (Email: String): RUserDTO
     ' + getCooAythors(email: String): ArrayList<RUSerDTO>
     '/
  }

  class ConferenceController {
    /'
     ' - user_dao: UserDAO
     ' - conf_dao: ConferenceDAO
     ' + ConferenceController(),
     ' + createConference(LocalDate scadenza, String title, String descr, ID id, RUserDTO org): boolean
     ' + getActiveConferences(): ArrayList<ShowActiveConferenceDTO>
     ' + getArticlesByConference(ID: ID_conference): ArrayList<ShowArticleDTO>
     '/
  }
  
  class ArticleController {
    /'
     ' - art_dao: ArticleDAO
     ' - user_dao: UserDAO
     ' - conf_dao: ConferenceDAO
     ' + ArticleController (),
     ' + submitArticle(String article_titolo, String article_abstrct,  ArrayList<RUserDTO> article_autori, ID id_conf): boolean
     ' + getArticleByAuthor(ID authorID): ArrayList<ShowArticleDTO>
     '/
  }

  class ReviewController {
    /'
     ' - reviewer_dao: ReviewDAO
     ' - user_dao: UserDAO
     ' - article_dao: ArticleDAO
     ' + ReviewController();
     ' + assignReviewer(ID articleID, ArrayList<PossibleReviewDTO> list_reviewer_selected): boolean
     ' + getListReviewer(ID articleID): ArrayList<PossibleReviewDTO>
     ' + updateArticleStatus (ID id_article, String status): boolean
     '/
  }

  class NotificationController {
    /'
     ' - conf_dao: ConferenceDAO
     ' - user_dao: UserDAO
     ' + NotificationController(),
     ' + sendNotificationDeadline(): void
     ' + creatMessage(String aut_name, String aut_lastname, ArrayList<String> conf_title): String
     ' + sendEmail (String email_d, String msg, String subject): void
     ' + run(): void
     '/
  }

TimerTask <|-- NotificationController

}

package Boundary {
  class LoginView {
    /'
     ' + showLoginForm()
     ' + showRegistretionForm()
     ' + handleLogin()
     ' + handleRegistration()
     '/
  }
  class LoginForm{
    /'
     ' +displayForm()
     ' +submitLogin()
     '/
  }
  class RegisterForm{
    /'
     ' +displayForm()
     ' +submitRegistration()
     '/
  }
  
  class AuthorDashboard {
    /'
     ' + showActiveConferences()
     ' + showSubmittedArticles()
     '/
  }
  
  class SubmitArticleForm {
    /'
     ' + displayForm()
     ' + submitArticle()
     '/
  }
  
  class OrganizerDashboard {
    /'
     ' + showConferenceList()
     ' + viewStats()
     '/
  }
  
  class CreateConferenceForm {
    /'
     ' + displayForm()
     ' + createConference()
     '/
  }
  
  class AssignReviewersView {
    /'
     ' + showPendingArticles()
     ' + assignReviewers()
     '/
  }
  class ReviewForm {
  }
  class ReviewDashboard {
  }
  class RegistrationForm {
  }
  
}

package DTO{

    class PossibleReviewDTO {
        /'
	 ' - id: ID 
         ' - name: String
         ' - lastname: String
         ' - affiliazione: String
         ' + PossibleReviewDTO(id: ID, name: String, lastname: String, affiliazione: String),
         ' + PossibleReviewDTO(autore: Author),
         ' + getId(): ID
         ' + getName(): String
         ' + getLastname(): String
         ' + getAffiliation(): String
	 '/
    }

    class RUserDTO {
        /'
	 ' - name: String
         ' - lastname: String
         ' - email: String
         ' - affiliazione: String
         ' - ruolo: String
         ' - id: ID
         ' + RUserDTO(name: String, lastname: String, email: String, affiliazione: String, ruolo: String, id: ID),
         ' + RUserDTO(user User),
         ' + RUserDTO(Ruser RUserDTO),
         ' + getName(): String
         ' + getLastname(): String
         ' + getEmail(): String
         ' + getAffiliation(): String
         ' + getRole(): String
         ' + getId(): ID
	 '/
    }

    class ShowActiveConferenceDTO {
        /'
	 ' - id: ID 
         ' - titolo: String
         ' - scadenza: Date
         ' - descrizione: String
         ' + ShowActiveConferenceDTO(id: ID ,titolo: String ,scadenza: Date, decrizione: String),
         ' + ShowActiveConferenceDTO(active_conference: ShowActiveConferenceDTO),
         ' + ShowActiveConferenceDTO(conference: Conference),
         ' + getId(): ID
         ' + getTitle(): String
         ' + getDeadline(): Date
	 '/
'        + getDescription(): String
    }

    class ShowArticleDTO {
        /'
	 ' - id: ID 
         ' - titolo: String
         ' - abstr: String
         ' - autori: ArrayList<RUserDTO>
         ' + ShowArticleDTO(id: ID,titolo: String, abstr: String, autori: ArrayList<RUserDTO>),
         ' + ShowArticleDTO(article: Article),
         ' + ShowArticleDTO(article_dto: ShowArticleDTO),
         ' + getId(): ID
         ' + getTitle(): String
         ' + getAbstr(): String
	 '/
'        + getAuthors(): ArrayList<RUserDTO>
	}

}

Article -> ID
Review -> ID
Conference -> ID
User -> ID
Organizer -> ID
Author -> ID
DBManager -> PasswordManager
ArticleDAO -u-> Article
ArticleDAO -u-> Author
UserDAO -u-> Author
UserDAO -u-> Organizer
UserDAO -u-> User
UserDAO --> ID
ReviewDAO --> ID
ReviewDAO -u-> Review
ReviewDAO -u-> Article
ReviewDAO -u-> Author
ConferenceDAO -u-> Article
ConferenceDAO -u-> Author
ConferenceDAO -u-> Conference
ConferenceDAO --> ID
ReviewController -d-> ArticleDAO
ReviewController -d-> ReviewDAO
ReviewController -d-> UserDAO
ReviewController -u-> RUserDTO
ReviewController -u-> PossibleReviewDTO
ReviewController -u-> ShowArticleDTO
ConferenceController -d-> ConferenceDAO
ConferenceController -d-> UserDAO
ConferenceController -u-> RUserDTO
ConferenceController -u-> ShowArticleDTO
ConferenceController -u-> ShowActiveConferenceDTO
ArticleController -d-> ArticleDAO
ArticleController -d-> ConferenceDAO
ArticleController -d-> UserDAO
ArticleController -u-> RUserDTO
ArticleController -u-> ShowArticleDTO
NotificationController -d-> ConferenceDAO
NotificationController -d-> UserDAO
UserController -d-> UserDAO
UserController -u-> RUserDTO
ReviewForm -d-> ReviewController
OrganizerDashboard -d-> ConferenceController
OrganizerDashboard -d-> ReviewController
AuthorDashboard -d->ArticleController
AuthorDashboard -d-> ConferenceController
RegistrationForm -d-> UserController
ReviewDashboard -d-> ReviewController
SubmitArticleForm -d-> ArticleController
SubmitArticleForm -d-> UserController
AssignReviewersView -d-> ReviewController
LoginForm -d-> UserController
CreateConferenceForm -d-> ConferenceController
@enduml
