@startuml
package Controller {

  class UserController {
    - user_dao: UserDAO
    + UserController();
    + registerUser(affiliazione: String, email: String, lastname: String, name: String, password: String, ruole: String): RUserDTO
    + login(email: String, password: String): RUserDTO
    + getRAuthorBYEmail (Email: String): RUserDTO
    + getCooAythors(email: String): ArrayList<RUSerDTO>
  }

  class ConferenceController {
    - user_dao: UserDAO
    - conf_dao: ConferenceDAO
    + ConferenceController()
    + createConference(scadenza: LocalDate, title: String, descr: String, id: ID, org: RUserDTO): boolean
    + getActiveConferences(): ArrayList<ShowActiveConferenceDTO>
    + getArticlesByConference(ID: ID_conference): ArrayList<ShowArticleDTO>
  }
  
  class ArticleController {
    - art_dao: ArticleDAO
    - user_dao: UserDAO
    - conf_dao: ConferenceDAO
    + ArticleController()
    + submitArticle(article_titolo: String, article_abstrct: String, article_autori: ArrayList<RUserDTO>, id_conf: ID): boolean
    + getArticleByAuthor(authorID: ID): ArrayList<ShowArticleDTO>
  }

  class ReviewController {
    - reviewer_dao: ReviewDAO
    - user_dao: UserDAO
    - article_dao: ArticleDAO
    + ReviewController()
    + createReview(reviewers: ArrayList<RUserDTO>, article: ShowArticleDTO): boolean
    + getPossibleReviewers(articleID: ID): ArrayList<RUserDTO>
    + updateReview( final_review: ReviewDTO, new_score: String, new_result: String): ReviewDTO
    + getAllReviewsByReviewer(reviewer: ID): ArrayList<ReviewDTO>
    + getAllReviewsByArticle(articleId: ID): ArrayList<ReviewDTO>
    + checkReviewsCompletion(articleId: ID): boolean
  }

  class NotificationController {
    - conf_dao: ConferenceDAO
    - user_dao: UserDAO
    + NotificationController()
    + run(): void
    + sendNotificationDeadline(): void
    + creatMessage(aut_name: String, aut_lastname: String, conf_title: ArrayList<String>): String
    + sendEmail (email_d: String, msg: String, subject: String): void
  }
}
TimerTask <|-- NotificationController
@enduml
