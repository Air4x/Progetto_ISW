@startuml
package DataBase {
  class UserDAO {
    + getUserRoleByID(userId: String): String		
    + getUserByID(userId: String): User
    + isUserPresentByID(userId: String): boolean
    + isUserPresentByEmail(email: String): boolean
    + getUserIdByEmail(email: String): int
    + getAllAuthors(): List<User>
    + saveUser(user: User): void
  }
  
  class ConferenceDAO {
    + getConferenceByID(id: ID): Conference
    + isConferencePresentByID(id: ID): boolean
    + getAllConferences(): ArrayList<Conference>
    + getActiveConferences(): ArrayList<Conference>
    + saveConference(conf: Conference): void
    + getArticlesByConference(conf_id: ID): ArrayList<Article>
  }
  
  class ArticleDAO {
    + saveArticle(art: Article): void
    + getArticlesByAuthor(id_aut: ID): ArrayList<Article>
    + getArticleByID(id: ID): Article
    + isArticlePresentByID(id: ID): boolean
    + updateTitle(artid: ID, newTitle: String): void
    + updateAbstract(artid: ID, newAbstract: String): void
  }
  
  class ReviewDAO {
    + hasConflictOfInterest(idArt: ID, idUser: ID): boolean
    + assignReviewer(idArt: ID, idUser: ID): void
    + getReviewersForArticle(idArt: ID): ArrayList<String>
    + updateArticleStatus(id: ID, status: String): void
  }

  class DBManager {
    + getConnectio(): ODBConnection
  }

  UserDAO --> DBManager
  ConferenceDAO --> DBManager
  ArticleDAO --> DBManager
  ReviewDAO --> DBManager
}
@enduml
