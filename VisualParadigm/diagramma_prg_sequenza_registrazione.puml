@startuml
actor User 
participant "LoginView"
participant "RegistrationForm"
participant "UserController"
participant "UserDAO"
participant "user: User" as user
database "testDB"

activate User
activate LoginView	
User -> LoginView : "L'utente clicca sul tasto Register"
create RegistrationForm
LoginView -> RegistrationForm : <<create>> new RegistrationForm()
deactivate LoginView
User -> RegistrationForm : "L'utente inserisce i suoi dati"
activate RegistrationForm
RegistrationForm -> RegistrationForm : Validate input data
alt Dati validi
    create UserController
    RegistrationForm -> UserController: <<create>> new UserController()
    RegistrationForm -> UserController: registerUser(affiliazione, email, lastname, name, password, ruolo)
    activate UserController
    create user
    UserController -> user : <<create>> new User(affiliazione, email, lastname, name, password, ruolo)
    UserController -> UserDAO : saveUser(user)
    activate UserDAO
    UserDAO -> testDB: INSERT INTO Utenti (...)
    testDB --> UserDAO: success
    UserDAO --> UserController: void
    deactivate UserDAO
    UserController --> RegistrationForm: RUserDTO
    deactivate UserController
    RegistrationForm --> User : Mostra dashboard corrispondente
    destroy user
else Dati non validi
RegistrationForm --> User: Mostra messaggio di errore
end
deactivate User
@enduml
